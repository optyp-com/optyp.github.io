---
---
<section 
  id="about" 
  class="relative py-20 lg:py-28 overflow-hidden"
>
  <!-- Decorative Gradient Background -->
  <div class="absolute inset-0 -z-10 bg-gradient-to-tr from-primary-100/40 via-white to-gray-100"></div>

  <div class="container-custom text-center md:text-left relative z-10">
    <div class="flex flex-col md:grid md:grid-cols-2 md:gap-16 items-center">
      
      <!-- Illustration -->
      <div class="flex justify-center mb-10 md:mb-0 animate-fadeInUp floating">
        <img
          src="/images/about-resume.svg"
          alt="Career Growth Success Illustration"
          class="w-56 sm:w-72 md:w-full max-w-md drop-shadow-2xl"
        />
      </div>

      <!-- Content -->
      <div class="animate-fadeInUp" style="animation-delay:0.15s">
        <div class="bg-white/20 backdrop-blur-xl border border-white/30 rounded-3xl shadow-xl p-6 sm:p-10 hover:shadow-2xl transition">
          <h2 class="text-3xl sm:text-4xl lg:text-5xl font-heading font-extrabold mb-6 text-gray-900">
            About <span class="text-primary-600">OPTYP</span>
          </h2>
          <p class="text-base sm:text-lg leading-relaxed text-gray-700 mb-4">
            At <span class="font-semibold text-primary-600">OPTYP</span>, we specialize in optimizing your 
            <strong class="highlight">ATS Resume</strong>, 
            <strong class="highlight">LinkedIn</strong>, 
            <strong class="highlight">Indeed</strong>, 
            <strong class="highlight">Naukri</strong>, 
            <strong class="highlight">GitHub</strong>, and 
            <strong class="highlight">portfolio</strong> profiles 
            to help you get noticed and hired faster globally.
          </p>
          <p class="text-base sm:text-lg leading-relaxed text-gray-700">
            Our expert team ensures your professionalism is showcased to attract recruiters effectively.  
            <span class="font-semibold text-primary-600">GET SET, GET HIRED!</span>
          </p>

          <!-- Mini Stats Row -->
          <div class="mt-8 grid grid-cols-2 gap-6 sm:flex sm:gap-12 text-center md:text-left">
            <div>
              <!-- Keep data-target numeric (no plus sign) -->
              <p class="text-3xl font-bold text-primary-600 counter" data-target="500">0</p>
              <p class="text-gray-700 text-sm">Profiles Optimized</p>
            </div>
            <div>
              <p class="text-3xl font-bold text-primary-600 counter" data-target="30">0</p>
              <p class="text-gray-700 text-sm">Countries Served</p>
            </div>
          </div>
        </div>
      </div>

    </div>
  </div>

  <!-- Extra Styles -->
  <style>
    /* Floating animation for illustration */
    @keyframes float {
      0%, 100% { transform: translateY(0); }
      50% { transform: translateY(-12px); }
    }
    .floating {
      animation: float 6s ease-in-out infinite;
    }

    /* Fade-in-up animation */
    @keyframes fadeInUp {
      0% { opacity: 0; transform: translateY(30px); }
      100% { opacity: 1; transform: translateY(0); }
    }
    .animate-fadeInUp {
      animation: fadeInUp 1s ease forwards;
    }

    /* Keyword highlight hover */
    .highlight {
      position: relative;
      transition: color 0.3s ease, text-shadow 0.3s ease;
    }
    .highlight:hover {
      color: #16a34a; /* green-600 */
      text-shadow: 0 0 8px rgba(22, 163, 74, 0.4);
    }
  </style>

  <!-- COUNTER SCRIPT: smooth, uses IntersectionObserver and requestAnimationFrame -->
  <script type="module">
    // Run when the module loads on the client
    const counters = Array.from(document.querySelectorAll('.counter'));

    // If no counters, nothing to do
    if (counters.length === 0) {
      // no-op
    } else {
      // Smooth counting using requestAnimationFrame
      function animateCount(el, end, duration = 1500) {
        let startTime = null;
        function step(now) {
          if (!startTime) startTime = now;
          const progress = Math.min((now - startTime) / duration, 1);
          const current = Math.floor(progress * end);
          // format with locale separators for readability
          el.textContent = current.toLocaleString();
          if (progress < 1) {
            requestAnimationFrame(step);
          } else {
            el.textContent = end.toLocaleString() + '+';
          }
        }
        requestAnimationFrame(step);
      }

      function runCounters() {
        counters.forEach(el => {
          // parseInt will ignore non-numeric trailing characters; ensure numeric target
          const target = parseInt(el.getAttribute('data-target'), 10) || 0;
          animateCount(el, target, 1400 + Math.min(target, 1000)); // slightly scale duration with size
        });
      }

      // Observe the about section (or fallback to first counter if not present)
      const section = document.getElementById('about') || counters[0].closest('section') || document.body;

      if ('IntersectionObserver' in window) {
        const io = new IntersectionObserver((entries, observer) => {
          entries.forEach(entry => {
            if (entry.isIntersecting) {
              runCounters();
              observer.disconnect(); // run once
            }
          });
        }, { threshold: 0.35 });
        io.observe(section);
      } else {
        // Fallback: just run
        runCounters();
      }
    }
  </script>
</section>
