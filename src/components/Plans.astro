---
const { plans } = Astro.props;
---

<section 
  id="plans" 
  class="py-16 sm:py-20 bg-white dark:bg-gray-900 transition-colors duration-500 text-center"
>
  <div class="container-custom">
    <!-- Heading -->
    <h2 class="text-3xl sm:text-4xl font-heading font-bold mb-6 text-primary-700 dark:text-primary-500">
      Our Plans
    </h2>
    <p class="text-base sm:text-lg text-gray-600 dark:text-gray-300 mb-12 max-w-xl mx-auto">
      Choose the perfect plan to elevate your profile.
    </p>

    <!-- Illustration -->
    <div class="flex justify-center mb-8">
      <img 
        src="/images/about-network.svg" 
        alt="Networking Illustration" 
        class="w-40 sm:w-56 md:w-64 dark:opacity-90 transition-opacity duration-500"
        loading="lazy"
      />
    </div>

    <!-- Plans Grid -->
    <div class="grid gap-8 md:grid-cols-3">
      {plans.map(plan => (
        <div 
          class="card dark:bg-gray-900 dark:text-gray-200"
          key={plan.name}
          itemscope
          itemtype="https://schema.org/Product"
        >
          <!-- Plan Name -->
          <h3 class="text-2xl font-bold mb-4" itemprop="name">{plan.name}</h3>

          <!-- Plan Price -->
          <p 
            class="mb-4"
            itemprop="offers"
            itemscope
            itemtype="https://schema.org/Offer"
          >
            <meta itemprop="priceCurrency" content="INR" />
            {plan.features &&
             plan.features.length &&
             plan.features.find(f => f.toLowerCase().includes("total")) ? (
              <>
                <span class="line-through text-gray-400 mr-2">
                  {
                    (() => {
                      const totalLine = plan.features.find(f => f.toLowerCase().includes("total"));
                      const rupeesMatch = totalLine.match(/â‚¹[\d,]+/);
                      const dollarsMatch = totalLine.match(/\$[\d.,]+/);
                      return (
                        <>
                          {rupeesMatch && <span>{rupeesMatch[0]} </span>}
                          {dollarsMatch && <span>({dollarsMatch[0]})</span>}
                        </>
                      );
                    })()
                  }
                </span>
                <span 
                  class="text-primary-600 dark:text-primary-400 font-extrabold text-3xl"
                  itemprop="price"
                >
                  {plan.price}
                </span>
              </>
            ) : (
              <span 
                class="text-primary-600 dark:text-primary-400 font-extrabold text-3xl"
                itemprop="price"
              >
                {plan.price}
              </span>
            )}
            <link itemprop="availability" href="https://schema.org/InStock" />
            <link itemprop="url" href="https://optyp.github.io/#plans" />
          </p>

          <!-- Features -->
          <ul class="list-disc text-left mb-4 px-4 space-y-2" itemprop="description">
            {plan.features
              .filter(f => !f.toLowerCase().startsWith("total"))
              .map(feature => (
                <li key={feature} class="text-gray-700 dark:text-gray-400">{feature}</li>
              ))}
          </ul>

          <!-- Choose Plan Button -->
          <button
            onclick="openContactForm()"
            class="btn-primary-filled w-full"
            aria-label={`Choose ${plan.name}`}
          >
            Choose Plan
          </button>
        </div>
      ))}
    </div>
  </div>
</section>
