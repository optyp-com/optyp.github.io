---
const siteUrl = "https://optyp-com.github.io/optyp.github.io"; // ⚠️ update if repo name changes
---

<!-- Contact CTA Section -->
<section class="bg-gradient-to-br from-black via-gray-900 to-black py-20 text-white">
  <div class="container mx-auto max-w-5xl px-4 text-center">
    <h2 class="text-4xl font-extrabold mb-4 text-white tracking-wide-heading">
      Contact Us
    </h2>
    <div class="w-20 h-1 bg-gradient-to-r from-cyan-400 to-blue-500 mx-auto mb-10 rounded-full shadow-sm"></div>
    <p class="text-gray-300 mb-12 max-w-xl mx-auto">
      Have questions or want to get started? Click below to open the form.
    </p>
    <div class="flex flex-col items-center space-y-2">
      <button
        class="inline-block glass-btn px-8 py-3 rounded-xl font-semibold shadow-md hover:shadow-lg hover:scale-105 transition duration-300 focus:outline-none focus:ring-2 focus:ring-cyan-400"
        onclick="openContactForm()"
        aria-haspopup="dialog"
        aria-controls="contact-modal"
      >
        Get Started
      </button>
    </div>
  </div>
</section>

<!-- Modal -->
<div id="contact-modal"
     class="fixed inset-0 z-50 flex items-center justify-center bg-black/70 hidden opacity-0 transition-opacity duration-500 ease-out"
     role="dialog"
     aria-modal="true"
     aria-hidden="true"
     onclick="closeContactForm()">
  <div id="contact-modal-content"
       class="relative glass-panel w-full h-full sm:w-[95%] sm:h-[90%] md:w-[70%] md:h-[85%] flex flex-col transform transition-all duration-500 ease-out translate-y-10 opacity-0 scale-95"
       onclick="event.stopPropagation()"
       role="document"
       tabindex="-1"
       aria-labelledby="contact-modal-title">

    <!-- Header -->
    <div class="sticky top-0 z-10 flex justify-end p-3 glass-header border-b border-white/10">
      <button id="close-contact-btn"
        onclick="closeContactForm()"
        class="w-10 h-10 sm:w-8 sm:h-8 flex items-center justify-center bg-black/60 hover:bg-black/70 text-white rounded-full shadow-md transition duration-300 hover:scale-105 focus:outline-none focus:ring-2 focus:ring-cyan-400"
        aria-label="Close contact form">✕</button>
    </div>

    <!-- Form -->
    <div class="flex-1 overflow-y-auto p-6 sm:p-10">
      <div class="glass-box max-w-2xl mx-auto p-8 rounded-2xl shadow-sm">
        <h3 id="contact-modal-title" class="text-2xl font-bold text-white mb-4">Start a Conversation</h3>

        <form id="contact-form" class="space-y-6" novalidate>
          <input type="hidden" name="access_key" value="adb0d3eb-198d-40ab-bfeb-d6d36ed4e402">
          <input type="hidden" name="subject" value="New Contact Form Submission - OPTYP">
          <input type="hidden" name="from_name" value="OPTYP Contact Form">
          <input type="checkbox" name="botcheck" style="display:none">

          <!-- Name + Email -->
          <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
            <div>
              <label class="block text-sm font-semibold mb-1 text-gray-200">Full Name *</label>
              <input type="text" name="name" required aria-required="true" class="w-full rounded-xl border border-white/10 p-3 bg-black/60 text-white placeholder:text-gray-400 focus:outline-none focus:ring-2 focus:ring-cyan-400">
              <div class="field-error text-pink-400 text-sm mt-1 hidden" aria-live="polite"></div>
            </div>
            <div>
              <label class="block text-sm font-semibold mb-1 text-gray-200">Email *</label>
              <input type="email" name="email" required aria-required="true" class="w-full rounded-xl border border-white/10 p-3 bg-black/60 text-white placeholder:text-gray-400 focus:outline-none focus:ring-2 focus:ring-cyan-400">
              <div class="field-error text-pink-400 text-sm mt-1 hidden" aria-live="polite"></div>
            </div>
          </div>

          <!-- Phone -->
          <div>
            <label class="block text-sm font-semibold mb-1 text-gray-200">Contact Number *</label>
            <input type="tel" name="phone" required placeholder="+91 9876543210" aria-required="true"
              class="w-full rounded-xl border border-white/10 p-3 bg-black/60 text-white placeholder:text-gray-400 focus:outline-none focus:ring-2 focus:ring-cyan-400">
            <div class="field-error text-pink-400 text-sm mt-1 hidden" aria-live="polite"></div>
          </div>

          <!-- Profession -->
          <div>
            <label class="block text-sm font-semibold mb-1 text-gray-200">What do you currently do? *</label>
            <select name="profession" id="profession" required aria-required="true"
              class="w-full rounded-xl border border-white/10 p-3 bg-black/60 text-white placeholder:text-gray-400 focus:outline-none focus:ring-2 focus:ring-cyan-400">
              <option value="">Select an option</option>
              <option value="salaried">Salaried Professional</option>
              <option value="self-employed">Self-Employed</option>
              <option value="student">Student</option>
            </select>
            <div class="field-error text-pink-400 text-sm mt-1 hidden" aria-live="polite"></div>
          </div>

          <!-- Experience -->
          <div id="experience-wrapper" class="hidden">
            <label class="block text-sm font-semibold mb-1 text-gray-200">Years of Experience *</label>
            <select name="experience" id="experience"
              class="w-full rounded-xl border border-white/10 p-3 bg-black/60 text-white placeholder:text-gray-400 focus:outline-none focus:ring-2 focus:ring-cyan-400">
              <option value="">Select experience</option>
              <option value="0">0 years (Fresher)</option>
              <option value="1-2">1–2 years</option>
              <option value="3-5">3–5 years</option>
              <option value="5-10">5–10 years</option>
              <option value="10-15">10–15 years</option>
              <option value="15+">15+ years</option>
            </select>
            <div class="field-error text-pink-400 text-sm mt-1 hidden" aria-live="polite"></div>
          </div>

          <!-- Services -->
          <div>
            <label class="block text-sm font-semibold mb-1 text-gray-200">Select Services *</label>
            <select name="services" id="services" multiple required aria-required="true"
              class="w-full rounded-xl border border-white/10 p-3 bg-black/60 text-white placeholder:text-gray-400 focus:outline-none focus:ring-2 focus:ring-cyan-400">
              <option value="ATS Resume">ATS Resume</option>
              <option value="LinkedIn Optimization">LinkedIn Optimization</option>
              <option value="Naukri">Naukri</option>
              <option value="Indeed">Indeed</option>
              <option value="GitHub">GitHub</option>
              <option value="Portfolio Website">Portfolio Website</option>
              <option value="Upwork">Upwork</option>
              <option value="Fiverr">Fiverr</option>
              <option value="Topal">Topal</option>
              <option value="Personal Branding">Personal Branding</option>
            </select>
            <p class="text-sm text-gray-400 mt-1">Hold CTRL (Windows) or CMD (Mac) to select multiple.</p>
            <div class="field-error text-pink-400 text-sm mt-1 hidden" aria-live="polite"></div>
          </div>

          <!-- Message -->
          <div>
            <label class="block text-sm font-semibold mb-1 text-gray-200">Message *</label>
            <textarea name="message" rows="5" required aria-required="true"
              class="w-full rounded-xl border border-white/10 p-3 bg-black/60 text-white placeholder:text-gray-400 focus:outline-none focus:ring-2 focus:ring-cyan-400"></textarea>
            <div class="field-error text-pink-400 text-sm mt-1 hidden" aria-live="polite"></div>
          </div>

          <!-- Submit -->
          <div class="text-center">
            <button id="submit-btn" type="submit"
              class="inline-flex items-center justify-center gap-2 glass-btn px-8 py-3 rounded-xl font-semibold shadow-md hover:shadow-lg hover:scale-105 transition focus:outline-none focus:ring-2 focus:ring-cyan-400">
              <span id="btn-text">Send Message</span>
              <svg id="btn-spinner" class="animate-spin h-5 w-5 text-white hidden" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" aria-hidden="true">
                <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
                <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8v4a4 4 0 00-4 4H4z"></path>
              </svg>
            </button>
          </div>
        </form>
      </div>
    </div>
  </div>
</div>

<!-- Toast -->
<div id="toast" class="fixed bottom-5 right-5 hidden z-[9999]" aria-live="polite" aria-atomic="true">
  <div id="toast-content"
       class="flex items-center gap-3 px-6 py-4 rounded-xl border backdrop-blur-md bg-white/6 shadow-lg text-white font-medium transform translate-y-5 opacity-0 transition-all duration-500 ease-out">
    <span id="toast-icon" class="text-xl" aria-hidden="true"></span>
    <span id="toast-message"></span>
  </div>
</div>

<script is:inline>
  /* ====== Elements & state ====== */
  let lastFocusedElement = null;
  const modal = document.getElementById('contact-modal');
  const content = document.getElementById('contact-modal-content');
  const form = document.getElementById("contact-form");
  const submitBtn = document.getElementById("submit-btn");
  const btnText = document.getElementById("btn-text");
  const btnSpinner = document.getElementById("btn-spinner");

  const toast = document.getElementById("toast");
  const toastContent = document.getElementById("toast-content");
  const toastMessage = document.getElementById("toast-message");
  const toastIcon = document.getElementById("toast-icon");

  /* ====== Open / Close modal (with accessible focus handling) ====== */
  function openContactForm() {
    lastFocusedElement = document.activeElement;
    document.body.classList.add('overflow-hidden');
    modal.classList.remove('hidden');
    modal.setAttribute('aria-hidden', 'false');

    // animate in next frame
    requestAnimationFrame(() => {
      modal.classList.add('opacity-100');
      modal.classList.remove('opacity-0');
      content.classList.remove('translate-y-10','opacity-0','scale-95');
      content.classList.add('translate-y-0','opacity-100','scale-100');
    });

    // focus the close button for keyboard users
    const closeBtn = document.getElementById('close-contact-btn');
    if (closeBtn) closeBtn.focus();
  }

  function closeContactForm() {
    document.body.classList.remove('overflow-hidden');
    modal.classList.remove('opacity-100');
    modal.classList.add('opacity-0');
    content.classList.remove('translate-y-0','opacity-100','scale-100');
    content.classList.add('translate-y-10','opacity-0','scale-95');
    modal.setAttribute('aria-hidden', 'true');

    setTimeout(() => {
      modal.classList.add('hidden');
      if (lastFocusedElement) lastFocusedElement.focus();
    }, 500);
  }

  // Close on Escape
  document.addEventListener('keydown', (e) => {
    if (e.key === 'Escape' && !modal.classList.contains('hidden')) {
      closeContactForm();
    }
  });

  /* ====== Make any link or button that targets #contact open the modal instead of scrolling ======
     This ensures header nav "Contact" and any CTA with href="#contact" open the contact modal directly.
  */
  document.querySelectorAll('a[href*="#contact"], a[href$="/#contact"], a[href$="#contact"]').forEach(el => {
    el.addEventListener('click', (ev) => {
      // If it's an anchor inside this page, open modal; preserve normal behavior for external links by checking hostname
      ev.preventDefault();
      openContactForm();
    });
  });

  // Also intercept any future clicks delegated (in case nav is rendered after)
  document.addEventListener('click', (ev) => {
    const a = ev.target.closest && ev.target.closest('a[href*="#contact"]');
    if (a) {
      ev.preventDefault();
      openContactForm();
    }
  });

  /* ====== Profession toggle (keeps existing behavior) ====== */
  document.getElementById("profession").addEventListener("change", function() {
    const expWrapper = document.getElementById("experience-wrapper");
    const expField = document.getElementById("experience");
    if (this.value === "salaried") {
      expWrapper.classList.remove("hidden");
      expField.setAttribute('required','true');
    } else {
      expWrapper.classList.add("hidden");
      expField.removeAttribute('required');
      expField.value = '';
    }
  });

  /* ====== Toast helper (updated colors/classes for dark theme) ====== */
  function showToast(msg, type="info") {
    toastMessage.textContent = msg;
    toastContent.className =
      "flex items-center gap-3 px-6 py-4 rounded-xl border backdrop-blur-md bg-white/6 shadow-lg font-medium transform translate-y-5 opacity-0 transition-all duration-500 ease-out";
    if(type==="success"){
      toastIcon.textContent="✔️";
      toastContent.classList.add("border-green-400","text-green-200");
    } else if(type==="error"){
      toastIcon.textContent="❌";
      toastContent.classList.add("border-pink-400","text-pink-200");
    } else {
      toastIcon.textContent="ℹ️";
      toastContent.classList.add("border-cyan-400","text-cyan-200");
    }
    toast.classList.remove("hidden");
    // animate in
    requestAnimationFrame(()=>{
      toastContent.classList.remove("opacity-0","translate-y-5");
      toastContent.classList.add("opacity-100","translate-y-0");
    });
    // hide after 3s
    setTimeout(()=>{
      toastContent.classList.remove("opacity-100","translate-y-0");
      toastContent.classList.add("opacity-0","translate-y-5");
      setTimeout(()=>toast.classList.add("hidden"),500);
    },3000);
  }

  /* ====== Validation (keeps existing validation logic but adapts to new styling) ====== */
  function validateForm() {
    let valid=true;
    form.querySelectorAll(".field-error").forEach(e=>e.classList.add("hidden"));
    const req=["name","email","phone","profession","services","message"];
    req.forEach(n=>{
      const f=form.querySelector(`[name="${n}"]`);
      if(!f) return;
      // Handle select[multiple] (services)
      const value = f.multiple ? Array.from(f.selectedOptions).map(o=>o.value).join(', ').trim() : (f.value || '').trim();
      if(!value){
        f.classList.add("border-pink-400");
        const errEl = f.parentNode.querySelector(".field-error");
        if(errEl){ errEl.textContent="This field is required"; errEl.classList.remove("hidden"); }
        valid=false;
      } else {
        f.classList.remove("border-pink-400");
      }
    });

    if(form.profession && form.profession.value==="salaried" && !form.experience.value){
      form.experience.classList.add("border-pink-400");
      form.experience.parentNode.querySelector(".field-error").textContent="Please select experience";
      form.experience.parentNode.querySelector(".field-error").classList.remove("hidden");
      valid=false;
    }

    const email=form.email?.value || "";
    if(email && !/^[^@]+@[^@]+\.[^@]+$/.test(email)){
      form.email.parentNode.querySelector(".field-error").textContent="Invalid email";
      form.email.parentNode.querySelector(".field-error").classList.remove("hidden");
      form.email.classList.add("border-pink-400");
      valid=false;
    }

    const phone=form.phone?.value || "";
    if(phone && !/^[\+]?[\d\s\-]{10,15}$/.test(phone)){
      form.phone.parentNode.querySelector(".field-error").textContent="Invalid phone";
      form.phone.parentNode.querySelector(".field-error").classList.remove("hidden");
      form.phone.classList.add("border-pink-400");
      valid=false;
    }
    return valid;
  }

  /* ====== Submit handler (keeps original behavior, sends to web3forms) ====== */
  form.addEventListener("submit", async e => {
    e.preventDefault();
    if(!validateForm()){ showToast("Please fix errors","error"); return; }
    btnText.textContent="Sending...";
    btnSpinner.classList.remove("hidden");
    submitBtn.disabled=true;

    try {
      const fd = new FormData(form);
      // handle multiple selected services properly
      const services = fd.getAll("services");
      fd.delete("services");
      fd.append("services", services.join(", "));

      // Convert FormData to plain object
      const payload = {};
      for (const [k, v] of fd.entries()) payload[k] = v;

      // send using fetch to original endpoint
      const res = await fetch("https://api.web3forms.com/submit", {
        method: "POST",
        headers: { "Content-Type": "application/json", "Accept": "application/json" },
        body: JSON.stringify(payload)
      });
      const result = await res.json();

      if (res.status === 200) {
        showToast("Message sent successfully!","success");
        form.reset();
        // close modal & redirect to thank-you after small delay
        setTimeout(()=>{ closeContactForm(); window.location.href = `${siteUrl}/thank-you/`; }, 2000);
      } else {
        showToast(result.message || "Failed to send","error");
      }
    } catch (err) {
      showToast("Network error. Try again","error");
    } finally {
      btnText.textContent="Send Message";
      btnSpinner.classList.add("hidden");
      submitBtn.disabled=false;
    }
  });
</script>

<style>
  /* Reusable glass styles */
  .glass-panel {
    background: rgba(255,255,255,0.04);
    border: 1px solid rgba(255,255,255,0.06);
    border-radius: 1rem;
    backdrop-filter: blur(12px);
    box-shadow: 0 18px 50px rgba(0,0,0,0.6);
  }
  .glass-header {
    background: linear-gradient(180deg, rgba(255,255,255,0.02), rgba(255,255,255,0.01));
    backdrop-filter: blur(8px);
  }
  .glass-box {
    background: rgba(255,255,255,0.03);
    border: 1px solid rgba(255,255,255,0.06);
    border-radius: 1rem;
    backdrop-filter: blur(10px);
  }

  /* Glass button (neon) */
  .glass-btn {
    background: rgba(255,255,255,0.04);
    border: 1px solid rgba(255,255,255,0.12);
    color: #00ffd1;
    font-weight: 600;
    transition: all 0.25s ease;
    backdrop-filter: blur(8px);
  }
  .glass-btn:hover {
    background: rgba(0,255,204,0.08);
    box-shadow: 0 0 22px rgba(0,255,204,0.18);
    color: #ffffff;
    transform: translateY(-2px) scale(1.02);
  }

  /* Input focus and placeholder */
  input::placeholder, textarea::placeholder, select::placeholder { color: #9ca3af; }
  input, textarea, select {
    color: #fff;
  }

  /* Toast base */
  #toast-content {
    /* leave default as set in JS; add slight neon border on dark theme */
    border-radius: 12px;
  }

  /* Small responsive tweaks */
  @media (max-width: 640px) {
    .glass-panel { width: 95%; height: 92%; border-radius: 0.75rem; }
    .glass-box { padding: 1.25rem; }
  }

  /* Smooth pulse animation (2 seconds) - kept from original */
  @keyframes pulse-smooth {
    0%, 100% { transform: scale(1); }
    50% { transform: scale(1.08); }
  }
  .animate-pulse-smooth { animation: pulse-smooth 2s ease-in-out infinite; }
</style>
